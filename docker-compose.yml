version: '3.9'


networks:
  back:
    name: backend
  front:
    name: frontend

services:
  postgres:
    # names
    container_name: postgres
    domainname: postgres
    hostname: postgres
    # build
    build:
      context: ./
      dockerfile: ./docker/Dockerfile_postgres
      args:
        - POSTGRES_USER=${POSTGRES_USER}
        - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
        - POSTGRES_DB=${POSTGRES_DB}
      target: ${ENV}
    #image: postgres:latest
    # runtime
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
    expose:
      - "5432"
    restart: always
    networks:
      - back

  nestjs:
    # names
    container_name: nestjs
    domainname: nestjs
    hostname: nestjs
    # build
    build:
      context: ./
      dockerfile: ./docker/Dockerfile_backend
    #runtime
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - PORT=${PORT}
      - PORT_SERVER=${PORT_SERVER}
      - JWT_SECRET=${JWT_SECRET}
      - JWT_TTL=${JWT_TTL}
      - API_UID=${API_UID}
      - API_SECRET=${API_SECRET}
      - APP_NAME=${APP_NAME}
      - ENV=${ENV}
    depends_on:
      - postgres
    expose:
      - ${PORT_SERVER}
    ports:
      - ${PORT_SERVER}:${PORT_SERVER}
    restart: always
    networks:
      - back
      - front
    volumes:
      - ./backend/src:/usr/src/app/src
      - ./shared:/usr/src/app/shared

  web:
    # names
    container_name: web
    domainname: web
    hostname: web
    # build
    build:
      context: ./
      dockerfile: ./docker/Dockerfile_frontend
    #runtime
    environment:
      - PORT=${PORT}
      - WDS_SOCKET_PORT=${PORT_SERVER}
      - ENV=${ENV}
    depends_on:
      - nestjs
    ports:
      - ${PORT}:${PORT}
    restart: always
    networks:
      - front
    volumes:
      - ./frontend/src:/usr/src/app/frontend/src
      - ./frontend/public:/usr/src/app/frontend/public
      - ./shared:/usr/src/app/shared

  adminer:
    image: michalhosna/adminer
    container_name: adminer
    restart: always
    environment:
      - ADMINER_DRIVER=pgsql
      - ADMINER_SERVER=postgres
      - ADMINER_USERNAME=${POSTGRES_USER}
      - ADMINER_DB=${POSTGRES_DB}
    ports:
      - "80:8080"
    networks:
      - back
